
@{
    ViewBag.Title = "ParseNews";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="repostOverlay">
    <button type="button" class="btn btn-default" id="closeRepostOverlayBtn">
        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
    </button>

    <div id="repostFormDiv">

        <h2 class="tsarB" id="overlayOAuthor"></h2>
        <h3 class="tsarB" id="overlayUpload"></h3>

        <div class="form-group">
            <label for="example-color-input" class="col-2 col-form-label">Title</label>
            <div class="col-10">
                <input class="form-control tsarB" type="text" id="repostTitle" style="width: 80%;">
            </div>
        </div>
        <div class="form-group">
            <label for="example-color-input" class="col-2 col-form-label">Description</label>
            <div class="col-10">
                <textarea class="form-control robo" rows="3" value="" id="repostDesc" style="width: 80%;"> </textarea>
            </div>
        </div>
        <div class="form-group">
            <label for="example-color-input" class="col-2 col-form-label">Content</label>
            <div class="col-10">
                <textarea class="form-control robo" rows="5" value="" id="repostContent" style="width: 80%;"> </textarea>
            </div>
        </div>

        <div id="repostWrapper">
            <p>Add a tag "," to enter :)</p>
            <ul class="tags-input">
                <li class="tags-new">
                    <input type="text">
                </li>
            </ul>
        </div>

        <button type="button" class="btn btn-default" id="repostSubmitBtn"> Repost </button>
    </div>
</div>

<div id="searchBarContainer">
    <div class="row">

        <div class="col-md-1">
            <div class="dropdown">
                <button class="btn btn-default dropdown-toggle" type="button" id="apiListBtn" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                    Select Api
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu apiChoice" aria-labelledby="apiListBtn" id="apiList">
                    <li><a id="techCrunch">Tech Crunch</a></li>
                    <li><a id="buzzfeed">Buzzfeed</a></li>
                    <li role="separator" class="divider"></li>
                    <li><a id="bbc">BBC News</a></li>
                    <li><a id="bloomberg">Bloomberg</a></li>                    
                    <li><a id="cnn">CNN</a></li>
                    <li><a id="insider">Business Insider</a></li>
                    <li><a id="dailyMail">Daily Mail</a></li>
                    <li><a id="espn">ESPN</a></li>
                    <li><a id="google">Google News</a></li>
                    <li><a id="mashable">Mashable</a></li>
                    <li><a id="independent">Independent</a></li>
                </ul>
            </div>
        </div>

        <div class="col-md-11">
            <div id="custom-search-input">

                <div class="input-group col-md-12">
                    <input type="text" id="searchBarInput" class="form-control" />
                    <span class="input-group-btn">
                        <button class="btn btn-info btn-lg" type="button">
                            <i class="glyphicon glyphicon-search"></i>
                        </button>
                    </span>
                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div id="div1"></div>
        <!-- Note Content -->
        <div id="div2" class="col-md-12">
            <div><h2 class="tsarB" id="sourceh2"> </h2></div>
            <div id="noteSection">
                <ul class="cards" id="articleTarget">                  
                </ul>
            </div>
        </div>
    </div>

</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>

<script type="text/javascript">
    $(".navItems").removeClass("hidden");
    /**
    AJAX call to create author => user to get user id to upload the note
    */
    
    $(".cards > a").click(function () {
      
        var aID = $(this).attr("id");
        
        switch (aID) {
            case "techCrunch": getJson("techcrunch"); break;
            case "buzzfeed": getJson("buzzfeed"); break;           
            case "bbc": getJson("bbc-news"); break;
            case "cnn": getJson("cnn"); break;
            case "bloomberg": getJson("bloomberg"); break;
            case "insider": getJson("business-insider"); break;
            case "dailyMail": getJson("daily-mail"); break;
            case "espn": getJson("espn"); break;
            case "google": getJson("google-news"); break;
            case "mashable": getJson("mashable"); break;
            case "independent": getJson("independent"); break;                
        }   

        $("#articleTarget").children().empty();       
    });
    
    var articleList = new Array();
    var article;
    var articleId = 0;

    function Article(aId, source, author, title, description, url) {
        this.aId = aId;
        this.source = source;
        this.author = author;
        this.title = title;
        this.description = description;
        this.url = url;
    }

    function getJson(newsSource) {
        $.ajax({
            type: 'GET',
            url: 'https://newsapi.org/v1/articles?source=' + newsSource + '&apiKey=fd39537e496a499189011751864344ed',
            dataType: 'json',
            success: parseNews
        });
    }

    /*Default get techcrunch */
   $.ajax({
        type: 'GET',
        url: 'https://newsapi.org/v1/articles?source=' + "techcrunch" + '&apiKey=fd39537e496a499189011751864344ed',
        dataType: 'json',
        success: parseNews
    });
   
    function parseNews(data) {        
        var newsSource = data.source;
        $("#sourceh2").html(newsSource).css("padding-left", "1%");
        var start = data.articles;
        for (var i = 0; i < start.length; i++) {
            article = new Article(articleId, newsSource, start[i].author, start[i].title, start[i].description, start[i].url);
            articleList.push(article);
            addArticleToUi(article);
            ++articleId;
        }      
    }

    function addArticleToUi(article) {
        var targetUl = $("#articleTarget");
        var aLi = $("<li></li>").attr("class", "cards_item").attr("id", article.aId);
        $(targetUl).append(aLi);
        var cardDiv = $("<div></div>").attr("class", "newsCard");
        var cardContentDiv = $("<div></div>").attr("class", "card_content_news").css("padding-left", "20px" );
        var clickableDiv = $("<div></div>").attr("class", "infoContainer").css("padding-left", "10px").css("padding-left", "10px");
        var cardTitle = $("<div></div>").attr("class", "card_title tsarB").html(article.title).css("padding-top", "17px");
        var cardSource = $("<div></div>").attr("class", "card_title tsarR").html(article.source);
        var cardDesc = $("<div></div>").attr("class", "card_text robo").html(article.description).css("padding-bottom", "10px");
        var cardUrl = $("<a></a>").attr("class", "card_text robo").attr("href", article.url).html("View Article").css("padding-top", "10px");
        $(clickableDiv).append(cardTitle, cardSource, cardDesc, cardUrl );        
        var buttonGroup = $("<div></div>").attr("class", "row").css("margin-top", "10px").css("padding-left", "2%").css("width", "400px");
        var cardRepostBtn = $("<button></button>").attr("class", "noteButtons btn btn-default").attr("id", "retweet" + article.aId);
        var repostSpan = $("<span> </span>").attr("class", "glyphicon glyphicon-retweet").attr("aria-hidden", "true").css("width", "20px");
        var cardDeleteBtn = $("<button></button>").attr("class", "noteButtons btn btn-default").attr("id", "remove" + article.aId);
        var deleteSpan = $("<span> </span>").attr("class", "glyphicon glyphicon-remove").attr("aria-hidden", "true").css("width", "20px");
        $(cardRepostBtn).append(repostSpan);
        $(cardDeleteBtn).append(deleteSpan);
        $(buttonGroup).append(cardRepostBtn, cardDeleteBtn);        
        $(cardContentDiv).append(clickableDiv, buttonGroup, "<hr />");
        $(cardDiv).append(cardContentDiv);
        $(aLi).append(cardDiv);       
    }
    
    var noteId, noteTitle, noteAuthorId, noteAuthorName, noteDesc, noteContent, noteUploaded;
    var div1 = $("#div1");
    var div2 = $("#div2");
    var overlayTitle = $(".noteTitle");
    var overlayAuthor = $(".noteAuthor");
    var overlayDescription = $(".noteDescription");
    var overlayContent = $(".noteContent");
    var tagStrings = "";

    $(document).on("click", ".glyphicon.glyphicon-retweet", function() {
        noteId = $(this).closest("li").attr("id");
        var color = $( this ).css("color");
        if (color == "rgb(255, 0, 0)") {
            $(this).css("color", "black");
        }
        if (color == "rgb(51, 51, 51)") {
            $(this).css("color", "blue");
        }
        var closestLi = $(this).closest("li");      
    });

    $(document).on("click", ".glyphicon.glyphicon-search", function () {
        var searchText = $("#searchBarInput").val();
        alert(searchText);
    });


    $("#closeOverlayBtn").click(function () {
        PrepOverlay("basic");
        ResetGrid();
        $(".cards__item").css("width", "33.3333%");
    });

    $("#closeRepostOverlayBtn").click(function () {
        PrepOverlay("repost");
        ResetGrid();
        $(".cards__item").css("width", "33.3333%");
    });

    function GetNoteInfo(noteLi, interaction) {
        noteId = noteLi.closest("li").attr("id");
        noteTitle = noteLi.find("input#title").val();
        noteAuthorName = noteLi.find("input#authorName").val();
        noteAuthorId = noteLi.find("input#author").val();                 //original Author ID
        noteDesc = noteLi.find("input#description").val();
        noteContent = noteLi.find("input#content").val();
        noteUploaded = noteLi.find("input#uploaded").val();
        if (interaction === "basicClick") {
            AddOverlay(noteId, noteTitle, noteAuthorName , noteDesc, noteContent);
        }
        if (interaction === "repostClick") {
            AddRepostOverlay(noteTitle, noteAuthorName, noteAuthorId, noteDesc, noteContent, noteUploaded);
        }
    }

    function AddOverlay(noteId, noteTitle, noteAuthor, noteDesc, noteContent) {
        PrepOverlay("basic");
        GeneralOverlaySettings("basic");
        $(overlayTitle).html(noteTitle);
        $(overlayAuthor).html(noteAuthor);
        $(overlayDescription).html(noteDesc);
        $(overlayContent).html(noteContent);
    }

    function AddRepostOverlay(noteTitle, noteAuthorName, noteAuthorId, noteDesc, noteContent, noteUploaded) {
        PrepOverlay("repost");
        GeneralOverlaySettings("repost");
        $("#repostTitle").val("REPOST: " + noteTitle);
        $("#repostDesc").val(noteDesc);
        $("#repostContent").val(noteContent);
        $("#overlayOAuthor").html("Original Author: " + noteAuthorName);
        $("#overlayUpload").html("Posted: " + noteUploaded);
    }

    function GeneralOverlaySettings(overlay) {
        if (overlay === "basic") {
            document.getElementById("overlay").style.display = "block";
            document.getElementById("repostOverlay").style.display = "none";
        }
        if (overlay === "repost") {
            document.getElementById("repostOverlay").style.display = "block";
            document.getElementById("overlay").style.display = "none";
        }
        $("#noteSection").addClass("noteOverlayStyling");
        div1.addClass("col-xs-8");
        div2.addClass("col-xs-4");
        $(".cards__item").css("width", "100%");
    }

    function PrepOverlay(overlay) {
        document.getElementById("searchBarContainer").style.display = "none";
        div2.removeClass("col-xs-12");
        if (overlay === "basic") {
            $("#overlay").css("display", "none").delay(1000);
        } else if (overlay === "repost") {
            $("#repostOverlay").css("display", "none").delay(1000);
        } else {
            $("#repostOverlay").css("display", "none").delay(1000);
            $("#overlay").css("display", "none").delay(1000);
            ResetGrid();
        }
    }

    function ResetGrid() {
        div2.addClass("col-xs-12");
        document.getElementById("searchBarContainer").style.display = "block";
    }

    /*TAGS*/

    $("#repostSubmitBtn").click(function () {

        //submit repost here    insert note.Title, note.Description, note.UserId, DateTime.Now, note.Content, note.OriginalAuthor, note.TagList
      

        /*$(".tags").each(function () {
            tagStrings += " " + $(this).text();
        });

        console.log($("#repostTitle").val());
        console.log($("#repostDesc").val());
        console.log(currentUserId);
        console.log($("#repostContent").val());
        console.log(noteAuthorId);
        console.log(tagStrings);

         var ajaxNote = {
             NoteId : "",
             UserId: currentUserId,
             OriginalAuthor: noteAuthorId,
             Title : $("#repostTitle").val(),
             Description  : $("#repostDesc").val(),
             Content: $("#repostContent").val(),
             Uploaded : "",
             TagList: tagStrings
         };

        var repostObj = { "note": ajaxNote };
        var ajaxRepost = JSON.stringify(repostObj);

        $.ajax({
            type: "POST",
            url: "/Notes/Create",
            data: ajaxRepost,
            contentType: "application/json; charset=utf-8",
            dataType: "json"
        });

        console.log(ajaxRepost);*/
    });

    function existingTag(text) {
        var existing = false,
            text = text.toLowerCase();

        $(".tags").each(function () {
            if ($(this).text().toLowerCase() == text) {
                existing = true;
                return "";
            }
        });
        return existing;
    }

    $(function () {
        $(".tags-new input").focus();
        $(".tags-new input").keyup(function () {
            var tag = $(this).val().trim(),
                length = tag.length;

            if ((tag.charAt(length - 1) == ',') && (tag != ",")) {
                tag = tag.substring(0, length - 1);

                if (!existingTag(tag)) {
                    $('<li class="tags"><span>' + tag + '</span><i class="fa fa-times"></i></i></li>').insertBefore($(".tags-new"));
                    $(this).val("");
                }
                else {
                    $(this).val(tag);
                }
            }
        });

        $(document).on("click", ".tags i", function () {
            $(this).parent("li").remove();
        });
    });

</script>






